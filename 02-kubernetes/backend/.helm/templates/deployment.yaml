apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: {{ .Chart.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: test
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - image: {{ .Values.image }}
        name: backend
        ports:
          - containerPort: 8000
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          timeoutSeconds: 1
        env:
        - name: secretPassword
          valueFrom:
            secretKeyRef:
              name: mongo-password-secret
              key: password
        volumeMounts:
        - name: app-conifg
          mountPath: /app/config.json
          subPath: config.json
      volumes:
      - name: app-conifg
        configMap:
          name: {{ .Chart.Name }}
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-password-secret
type: Opaque
stringData:
  password: {{ .Values.global.password }}
